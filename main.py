from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from dotenv import load_dotenv
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
import os
base_dir = os.path.abspath(os.path.dirname(__file__))
base_path = os.path.join(base_dir, "VishMat")
load_dotenv()
TOKEN = os.getenv("TOKEN")
PDF_FILES = {
    f"VishMat_Lec{i}": os.path.join(base_path, f"lec{i}.pdf")
    for i in range(1, 33)
}
#-----------------------------------------------------------------------------------------------------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! üëã –Ø –±–æ—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–≤–æ—ó—Ö –∫–æ–Ω—Å–ø–µ–∫—Ç—ñ–≤ üìö‚ú®.")
    await update.message.reply_text("üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥: /help üõ†Ô∏è")
    await update.message.reply_text("üéì –û—Å—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∏:", reply_markup=main_keyboard())
#-----------------------------------------------------------------------------------------------------------------------
async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    about_text = (
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–Ω—Å–ø–µ–∫—Ç—ñ–≤ üìö\n\n"
        "–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à —à–≤–∏–¥–∫–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ —Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ –ª–µ–∫—Ü—ñ—ó –∑ —Ä—ñ–∑–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤.\n"
        "–ö–æ–º–∞–Ω–¥–∏:\n"
        "/start ‚Äî –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º\n"
        "/list ‚Äî —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤\n"
        "/help ‚Äî –¥–æ–ø–æ–º–æ–≥–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "/about ‚Äî —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞\n\n"
        "–°—Ç–≤–æ—Ä–µ–Ω–æ –∑ ‚ù§Ô∏è –¥–ª—è —Ç–≤–æ–≥–æ –∑—Ä—É—á–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è!"
    )
    await update.message.reply_text(about_text)
# -----------------------------------------------------------------------------------------------------------------------
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_keyboard')]
    ]
    help_text = (
        "üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥:\n"
        "/list ‚Äî —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤\n"
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/about ‚Äî —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞ üí°"
    )
    await update.message.reply_text(help_text, reply_markup=InlineKeyboardMarkup(keyboard))
#-----------------------------------------------------------------------------------------------------------------------
async def show_subjects(update, context):
    await update.message.reply_text("–û—Å—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∏: üìö", reply_markup=main_keyboard())
#-----------------------------------------------------------------------------------------------------------------------
def main_keyboard():
    keyboard = [
        [InlineKeyboardButton("–í–∏—â–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞üìê", callback_data='VishMat')],
        [InlineKeyboardButton("–ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞?üÜò", callback_data='help_command')],
    ]
    return InlineKeyboardMarkup(keyboard)
#-----------------------------------------------------------------------------------------------------------------------
def back_to_topics_keyboard_vishmat():
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ —Ç–µ–º", callback_data='back_to_topics')]
    ]
    return InlineKeyboardMarkup(keyboard)
#-----------------------------------------------------------------------------------------------------------------------
def topics_keyboard_vishmat():
    keyboard = [
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 1. –í–ò–ó–ù–ê–ß–ù–ò–ö–ò. –ú–ê–¢–†–ò–¶–Ü", callback_data='VishMat_Lec1')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 2. (–°–õ–ê–†)", callback_data='VishMat_Lec2')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 3. –í–ï–ö–¢–û–†–ù–ê –ê–õ–ì–ï–ë–†–ê", callback_data='VishMat_Lec3')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 4. –ê–Ω–∞–ª—ñ—Ç–∏—á–Ω–∞ –≥–µ–æ–º–µ—Ç—Ä—ñ—è –Ω–∞ –ø–ª–æ—â–∏–Ω—ñ", callback_data='VishMat_Lec4')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 5. –ê–Ω–∞–ª—ñ—Ç–∏—á–Ω–∞ –≥–µ–æ–º–µ—Ç—Ä—ñ—è –≤ —Ç—Ä–∏–≤–∏–º—ñ—Ä–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", callback_data='VishMat_Lec5')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 6. –í—Å—Ç—É–ø –¥–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É", callback_data='VishMat_Lec6')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 7. –ß—É–¥–æ–≤—ñ –≥—Ä–∞–Ω–∏—Ü—ñ –ù–µ–ø–µ—Ä–µ—Ä–≤–Ω—ñ—Å—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó", callback_data='VishMat_Lec7')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 8. –î–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ–∞–ª—å–Ω–µ —á–∏—Å–ª–µ–Ω–Ω—è", callback_data='VishMat_Lec8')],
        [InlineKeyboardButton("‚û°Ô∏è–ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='topics_keyboard_vishmat2')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data='back_to_subjects')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_keyboard')]
    ]
    return InlineKeyboardMarkup(keyboard)
#-----------------------------------------------------------------------------------------------------------------------
def topics_keyboard_vishmat2():
    keyboard = [
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 9. –ü–æ—Ö—ñ–¥–Ω—ñ —ñ –¥–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ–∞–ª–∏ –≤–∏—â–∏—Ö –ø–æ—Ä—è–¥–∫—ñ–≤", callback_data='VishMat_Lec9')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 10. –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ. —Ñ—É–Ω–∫—Ü. –∑ –ø–æ–≤–Ω–∏–º –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è–º", callback_data='VishMat_Lec10')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 11. –§—É–Ω–∫—Ü—ñ—è –±–∞–≥–∞—Ç—å–æ—Ö –∑–º—ñ–Ω–Ω–∏—Ö", callback_data='VishMat_Lec11')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 12. –ï–∫—Å—Ç—Ä–µ–º—É–º–∏ —Ñ—É–Ω–∫—Ü—ñ–π –±–∞–≥–∞—Ç—å–æ—Ö –∑–º—ñ–Ω–Ω–∏—Ö", callback_data='VishMat_Lec12')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 13. –ù–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π —ñ–Ω—Ç–µ–≥—Ä–∞–ª", callback_data='VishMat_Lec13')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 14. –ú–µ—Ç–æ–¥–∏ —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞–Ω–Ω—è", callback_data='VishMat_Lec14')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 15. –í–∏–∑–Ω–∞—á–µ–Ω–∏–π —ñ–Ω—Ç–µ–≥—Ä–∞–ª", callback_data='VishMat_Lec15')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 16. –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏–∑–Ω–∞—á–µ–Ω–∏—Ö —ñ–Ω—Ç–µ–≥—Ä–∞–ª—ñ–≤ –¥–æ —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á", callback_data='VishMat_Lec16')],
        [InlineKeyboardButton("‚û°Ô∏è–ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='topics_keyboard_vishmat3')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data='back_to_topics')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_keyboard')]
    ]
    return InlineKeyboardMarkup(keyboard)
#-----------------------------------------------------------------------------------------------------------------------
def topics_keyboard_vishmat3():
    keyboard = [
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 17. –û—Å–Ω–æ–≤–Ω—ñ –ø–æ–Ω—è—Ç—Ç—è —Ç–µ–æ—Ä—ñ—ó –¥–∏—Ñ–µ—Ä–µ–Ω—Ü—ñ–∞–ª—å–Ω–∏—Ö —Ä—ñ–≤–Ω—è–Ω—å", callback_data='VishMat_Lec17')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 18. –¢–∏–ø–∏ –î–† —Ç–∞ —Å–ø–æ—Å–æ–±–∏ —ó—Ö —Ä–æ–∑–≤'—è–∑–∫—É –†—ñ–≤–Ω—è–Ω—è –ë–µ—Ä–Ω—É–ª–ª—ñ", callback_data='VishMat_Lec18')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 19. –õ–ù–î–† 2-–≥–æ —Ç–∞ –≤–∏—â–∏—Ö –ø–æ—Ä—è–¥–∫—ñ–≤ –∑—ñ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—é –ø—Ä–∞–≤–æ—é —á–∞—Å—Ç–∏–Ω–æ—é", callback_data='VishMat_Lec19')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 20. –°–∏—Å—Ç–µ–º–∏ –î–†", callback_data='VishMat_Lec20')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 21. –ü–æ–¥–≤—ñ–π–Ω—ñ —ñ–Ω—Ç–µ–≥—Ä–∞–ª–∏", callback_data='VishMat_Lec21')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 22. –ü–æ—Ç—Ä—ñ–π–Ω—ñ —ñ–Ω—Ç–µ–≥—Ä–∞–ª–∏", callback_data='VishMat_Lec22')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 23. –ö—Ä–∏–≤–æ–ª—ñ–Ω—ñ–π–Ω—ñ —ñ–Ω—Ç–µ–≥—Ä–∞–ª–∏", callback_data='VishMat_Lec23')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 24. –ü–æ–≤–µ—Ä—Ö–Ω–µ–≤—ñ —ñ–Ω—Ç–µ–≥—Ä–∞–ª–∏", callback_data='VishMat_Lec24')],
        [InlineKeyboardButton("‚û°Ô∏è–ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='topics_keyboard_vishmat4')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data='topics_keyboard_vishmat2')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_keyboard')]
    ]
    return InlineKeyboardMarkup(keyboard)
#-----------------------------------------------------------------------------------------------------------------------
def topics_keyboard_vishmat4():
    keyboard = [
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 25. –¢–µ–æ—Ä—ñ—è –ø–æ–ª—è", callback_data='VishMat_Lec25')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 26. –ß–∏—Å–ª–æ–≤—ñ —Ä—è–¥–∏. –ó–Ω–∞–∫–æ–¥–æ–¥–∞—Ç–Ω—ñ —á–∏—Å–ª–æ–≤—ñ —Ä—è–¥–∏", callback_data='VishMat_Lec26')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 27. –ó–Ω–∞–∫–æ–ø–µ—Ä–µ–º—ñ–∂–Ω—ñ —Ç–∞ –∑–Ω–∞–∫–æ–∑–º—ñ–Ω–Ω—ñ —á–∏—Å–ª–æ–≤—ñ —Ä—è–¥–∏", callback_data='VishMat_Lec27')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 28. –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ —ñ —Å—Ç–µ–ø–µ–Ω–µ–≤—ñ —Ä—è–¥–∏", callback_data='VishMat_Lec28')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 29. –†—è–¥–∏ –§—É—Ä'—î", callback_data='VishMat_Lec29')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 30. –û—Å–Ω–æ–≤–∏ —Ç–µ–æ—Ä—ñ—ó –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç–µ–π", callback_data='VishMat_Lec30')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 31. –ü–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å –≤–∏–ø—Ä–æ–±—É–≤–∞–Ω—å. –°—Ö–µ–º–∞ –ë–µ—Ä–Ω—É–ª–ª—ñ", callback_data='VishMat_Lec31')],
        [InlineKeyboardButton("üìå–¢–µ–º–∞ 32. –î–∏—Å–∫—Ä–µ—Ç–Ω—ñ —ñ –Ω–µ–ø–µ—Ä–µ—Ä–≤–Ω—ñ –≤–∏–ø–∞–¥–∫–æ–≤—ñ –≤–µ–ª–∏—á–∏–Ω–∏", callback_data='VishMat_Lec32')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data='topics_keyboard_vishmat3')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_keyboard')]
    ]
    return InlineKeyboardMarkup(keyboard)
#-----------------------------------------------------------------------------------------------------------------------
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat.id

    async def replace_message(query, context, text, reply_markup=None):
        try:
            await query.message.delete()
        except:
            pass
        await context.bot.send_message(chat_id=query.message.chat.id, text=text, reply_markup=reply_markup)
# -----------------------------------------------------------------------------------------------------------------------
    if query.data == "VishMat":
        await replace_message(query, context, "–í–∏ –æ–±—Ä–∞–ª–∏ –í–∏—â—É –º–∞—Ç–µ–º–∞—Ç–∏–∫—É üìê –û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É (–ø–æ–∫–∞–∑–∞–Ω—ñ –ø–µ—Ä—à—ñ 8 —Ç–µ–º):", reply_markup=topics_keyboard_vishmat())
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data == "main_keyboard":
        await replace_message(query, context, "–û—Å—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∏: üîç", reply_markup=main_keyboard())
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data == "back_to_subjects":
        await replace_message(query, context, "–û—Å—å –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∏: üîç", reply_markup=main_keyboard())
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data == "back_to_topics":
        await replace_message(query, context, "–í–∏ –æ–±—Ä–∞–ª–∏ –í–∏—â—É –º–∞—Ç–µ–º–∞—Ç–∏–∫—É. –û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É: üîç", reply_markup=topics_keyboard_vishmat())
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data == "topics_keyboard_vishmat2":
        await replace_message(query, context, "–¢–µ–º–∏ 9-16 üìù", reply_markup=topics_keyboard_vishmat2())
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data == "topics_keyboard_vishmat3":
        await replace_message(query, context, "–¢–µ–º–∏ 17-24 üìù", reply_markup=topics_keyboard_vishmat3())
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data == "topics_keyboard_vishmat4":
        await replace_message(query, context, "–¢–µ–º–∏ 25-32 üìù", reply_markup=topics_keyboard_vishmat4())
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data == "help_command":
        await replace_message(query, context,         "üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥:\n"
        "/list ‚Äî —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤\n"
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/about ‚Äî —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞ üí°",
                              reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_keyboard')]]))
# -----------------------------------------------------------------------------------------------------------------------
    elif query.data in PDF_FILES:
        file_path = PDF_FILES[query.data]
        if os.path.exists(file_path):
            try:
                with open(file_path, 'rb') as f:
                    await context.bot.send_document(chat_id=chat_id, document=f)
            except Exception as e:
                await context.bot.send_message(chat_id=chat_id, text=f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ñ–∞–π–ª—É‚ùå‚ö†Ô∏è{e}")
                # ------------------------------------------------------------------------------------------------------
            await context.bot.send_message(
                chat_id=chat_id,
                text="‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ —Å–ø–∏—Å–∫—É —Ç–µ–º:",
                reply_markup=back_to_topics_keyboard_vishmat()
            )
        else:
            await context.bot.send_message(chat_id=chat_id, text="–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üò¢‚ùå")
#-----------------------------------------------------------------------------------------------------------------------
if __name__ == '__main__':
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("about", about_command))
    app.add_handler(CommandHandler("list", show_subjects))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CallbackQueryHandler(button_handler))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    app.run_polling()
#-----------------------------------------------------------------------------------------------------------------------